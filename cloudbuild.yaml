logsBucket: "gs://rc05logs/"

steps:
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/abcdef-1sdf/my-app', '.']
  id: 'Build Docker image'

- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/abcdef-1sdf/my-app']
  id: 'Push Docker image to GCR'

- name: 'gcr.io/cloud-builders/gcloud'
  id: 'Connect to instance'
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
    # Create .ssh directory and set permissions
    mkdir -p ~/.ssh && \
    
    # Retrieve private key from Secret Manager and set permissions
    gcloud secrets versions access latest --secret=cloud-build-ssh-key > ~/.ssh/id_rsa && \
    chmod 600 ~/.ssh/id_rsa && \
    
    # Retrieve public key from Secret Manager and set permissions
    gcloud secrets versions access latest --secret=cloud-build-ssh-key-pub > ~/.ssh/id_rsa.pub && \
    chmod 600 ~/.ssh/id_rsa.pub && \
    
    # Add remote host to known hosts
    ssh-keyscan -H 34.135.79.45 >> ~/.ssh/known_hosts && \
    
    # Copy service account key to remote machine
    scp -i ~/.ssh/id_rsa /root/.ssh/service-account-key.json rchinta3@34.135.79.45:/home/rchinta3/service-account-key.json && \
    
    # Connect to Compute Engine instance and configure Docker
    gcloud compute ssh rchinta3@34.135.79.45 --zone=us-central1-a --command '
    sudo gcloud auth activate-service-account --key-file=/home/rchinta3/service-account-key.json && \
    sudo gcloud auth configure-docker gcr.io && \
    sudo docker pull gcr.io/abcdef-1sdf/my-app:latest && \
    sudo docker run -d -p 80:80 gcr.io/abcdef-1sdf/my-app:latest || echo "Port 80 is already in use"'
images:
  - 'gcr.io/abcdef-1sdf/my-app'

timeout: '1200s'
